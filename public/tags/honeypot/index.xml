<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Honeypot - Tag - Forensic wheels</title>
    <link>http://localhost:1313/tags/honeypot/index.html</link>
    <description></description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 24 Jun 2025 11:49:27 +0200</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/honeypot/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HoneyHTTPD</title>
      <link>http://localhost:1313/posts/honeyhttpd/index.html</link>
      <pubDate>Fri, 11 Jan 2019 16:00:00 -0500</pubDate>
      <guid>http://localhost:1313/posts/honeyhttpd/index.html</guid>
      <description>I. Introduction Brief overview of the use case: ingesting web data into Elasticsearch with HoneyPot HTTPD II. Setting up HoneyPot HTTPD for Web Data Ingestion Containerizing the application to run inside docker III.Ingesting Web Data into Elasticsearch with HoneyPot HTTPD Explanation of how to use the honeyhttpd command-line tool to ingest web data into Elasticsearch Example of how to configure the honeyhttpd output to match your desired Elasticsearch index structure IV. Benefits and Use Cases Discussion of the benefits of using HoneyPot HTTPD for ingesting web data into Elasticsearch (e.g., improved threat detection, enhanced visibility) Real-world examples of use cases where this setup can be particularly effective (e.g., logging web traffic, monitoring online activity) V. Conclusion Recap of key points about using HoneyPot HTTPD to ingest web data into Elasticsearch*** Final thoughts on the value of this setup for your organizationâ€™s threat hunting or security operations. I. Introduction Brief overview of the use case: ingesting web data into Elasticsearch with HoneyPot HTTPD I recently set out to ingest web traffic data into our SIEM solution, which requires data to be ingested in a specific format. After researching various options, I sought an easy-to-use solution that could integrate with our existing Elasticsearch setup. One tool that caught my attention was HoneyPot HTTPD.</description>
    </item>
  </channel>
</rss>