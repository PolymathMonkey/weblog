var relearn_searchindex = [
  {
    "breadcrumb": "Forensic wheels \u003e  Forensic wheels",
    "content": "Hi! I’m Dirk, a security engineer with a passion for Skateboarding and Forensics. By day, I help my Company safeguard their networks and systems from the ever-evolving threats in the cybersecurity landscape.\nBut when the sun goes down, my true self emerges. Skateboarding is not just my hobby - it’s my passion, my center, and my identity. For me, Skatelife is more than just lifestyle; it’s a way of life that embodies creativity, freedom, and community and Family. I’ve been skating for years, and I still get that same feel every time I’m on my board.\nIn addition to my love for skateboarding, I’m also a big enthusiast of OpenBSD - the most secure, yet accessible operating system out there. I’ve built my own OpenBSD-based router and infrastructure for threat hunting, which allows me to stay one step ahead in the game of cybersecurity. There’s something about the simplicity, elegance, and power of OpenBSD that resonates deeply with me. You can also read about the smilarities I see between OpenBSD and Zen\nAs a nerd, I have to mention my love affair with Emacs - the most flexible, and customizable text editor out there. I’ve been using it for over 12 years now, and I still can’t imagine working without it. Whether I’m writing code, weblogging, or just tinkering with snippets of text, Emacs is always by my side.\nAs I navigate the world of cybersecurity, I’m always looking for ways to improve my skills, stay ahead of the curve, and when I’m not geeking out over security patches or network protocols, you can find me:\nShredding the on my Deck (Skatelife all the way!) Exploring the depths of OpenBSD and building cool stuff Rocking with Emacs (like this hugo blog for example) Writing about my adventures, insights, and projects Stay tuned for more updates on my journey as a security engineer, skateboarder, OpenBSD enthusiast, and Zen student”\nAnd since I am searching for a new employer right now I will update this part soon with a more professional CV like part.",
    "description": "Hi! I’m Dirk, a security engineer with a passion for Skateboarding and Forensics. By day, I help my Company safeguard their networks and systems from the ever-evolving threats in the cybersecurity landscape.\nBut when the sun goes down, my true self emerges. Skateboarding is not just my hobby - it’s my passion, my center, and my identity. For me, Skatelife is more than just lifestyle; it’s a way of life that embodies creativity, freedom, and community and Family. I’ve been skating for years, and I still get that same feel every time I’m on my board.",
    "tags": [
      "Forensicwheels"
    ],
    "title": "About",
    "uri": "/posts/about/index.html"
  },
  {
    "breadcrumb": "Forensic wheels \u003e  Forensic wheels",
    "content": "About Simplicity and Clarity Attention to Detail The Power of Consistency The Beauty of Imperfection About As someone who is into security, I’ve always been fascinated by the world of Unix operating systems. Among them, OpenBSD stands out for its commitment to security, stability, and simplicity. But what sets it apart from other OSes? And how does it relate to my journey with Zen meditation?\nAt first glance, OpenBSD and Zen might seem like vastly different concepts. One is a powerful operating system, while the other is a spiritual practice that originated in ancient China. However, as I dived deeper into both worlds, I discovered some intriguing commonalities.\nSimplicity and Clarity OpenBSD’s minimalist approach to software design resonates deeply with the principles of Zen Buddhism. In Zen, simplicity is key to achieving inner clarity and balance. By stripping away unnecessary complexity, OpenBSD aims to create a stable and secure foundation for users. Similarly, in meditation, simplicity helps to quiet the mind and focus on the present moment.\nAttention to Detail Both OpenBSD and Zen emphasize the importance of attention to detail. In software development, this means carefully crafting each line of code to ensure stability and security. In Zen practice, it means paying close attention to one’s breath, posture, and mental state to achieve a state of mindfulness. By focusing on these details, both OpenBSD and Zen strive for perfection.\nThe Power of Consistency OpenBSD’s commitment to consistency is evident in its codebase, where each code change follows a code review. Zen practice, consistency is also crucial, as it helps to establish a sense of routine and stability. By establishing a daily meditation practice, I’ve found that consistency is key to making progress on my spiritual journey.\nThe Beauty of Imperfection Finally, both OpenBSD and Zen recognize the beauty in imperfection. In software development, imperfections can often be corrected or mitigated through careful design and testing. In Zen practice, imperfections are seen as opportunities for growth and self-awareness. By embracing our imperfections, we can cultivate a sense of humility and compassion.\nAs I continue on my journey with OpenBSD and Zen, I’m struck by the ways in which these two seemingly disparate worlds intersect. By embracing simplicity, attention to detail, consistency, and the beauty of imperfection, both OpenBSD and Zen offer unique insights into the nature of software development and personal growth.\nStay tuned for more updates from my adventures in the world of security, coding, and spiritual growth!\nIdeas for future posts:\nnone yet",
    "description": "About Simplicity and Clarity Attention to Detail The Power of Consistency The Beauty of Imperfection About As someone who is into security, I’ve always been fascinated by the world of Unix operating systems. Among them, OpenBSD stands out for its commitment to security, stability, and simplicity. But what sets it apart from other OSes? And how does it relate to my journey with Zen meditation?\nAt first glance, OpenBSD and Zen might seem like vastly different concepts. One is a powerful operating system, while the other is a spiritual practice that originated in ancient China. However, as I dived deeper into both worlds, I discovered some intriguing commonalities.",
    "tags": [
      "Forensicwheels",
      "Openbsd",
      "Zen"
    ],
    "title": "OpenBSD and Zen",
    "uri": "/posts/openbsdzen/index.html"
  },
  {
    "breadcrumb": "Forensic wheels \u003e  Forensic wheels",
    "content": "Enterprise Threat hunting and Response (FOR608) Introduction Brief overview of forensic analysis and its application Course Overview Proactive Detection and Response (608.1) Scaling Response and Analysis (608.2) Modern Attacks against Windows and Linux DFIR (608.3) Analyzing macOS and Docker Containers (608.4) Cloud Attacks and Response (608.5) Capstone: Enterprise-Class IR Challenge Key Takeaways Summary of key concepts and skills learned during the course Analysis of learning outcomes and their application in real-world scenarios Conclusion and Recommendations Summary of overall effectiveness of the SANS Forensics course for608 Recommendations for future students looking to learn forensic analysis skills Enterprise Threat hunting and Response (FOR608) Course description from SANS 1 :\nFOR608: Enterprise-Class Incident Response \u0026 Threat Hunting focuses on identifying and responding to incidents too large to focus on individual machines. By using example tools built to operate at enterprise-class scale, students learn the techniques to collect focused data for incident response and threat hunting, and dig into analysis methodologies to learn multiple approaches to understand attacker movement and activity across hosts of varying functions and operating systems by using an array of analysis techniques.\nIntroduction Brief overview of forensic analysis and its application Forensic analysis in computer science investigates digital evidence to solve cybercrimes and security incidents. In enterprise environments, it involves analyzing devices, networks, and cloud storage. Key applications include incident response, compliance with regulations, investigations, and predictive analytics.\nTools like Timesketch, Velociraptor or Wireshark, and cloud forensics platforms aid in the analysis. Collaboration between IT and law enforcement is also crucial for successful investigations.\nThe goal of forensic analysis is to reconstruct events, identify perpetrators, and determine damage extent, ensuring organizations can respond effectively to security threats and maintain compliance with regulations.\nCourse Overview Proactive Detection and Response (608.1) The FOR608 course begins in chapter 1 by discussing current cyber defense concerns and the importance of collaboration among incident responders and threat hunters. It emphasizes the need for sharing knowledge from sources like the MITRE ATT\u0026CK framework and explores the concept of active defense, including the use of honeypots, honey tokens, and canaries to slow down attackers and facilitate detection.\nWhen a compromise does occur, the course focuses on efficient handling of intrusions, covering topics such as leading the response, managing team members, documenting findings, and communicating with stakeholders. The Aurora documentation tool is introduced as a means for tracking investigation phases from initial detection to remediation.\nThe chapter then dives into an example scenario where an alert is triggered in a company network, and triage data is analyzed using Timesketch, a powerful platform for scalable and collaborative analysis of forensic data. Additionally, techniques are shared for viewing the same data set with Kibana, which offers capabilities such as creating dashboards and saved searches to aid analysis.\nChapter 608.1 concludes by examining key threat intelligence concepts, including developing and implementing internal threat intelligence. External projects like MITRE ATT\u0026CK and Sigma are leveraged, and two comprehensive threat intel platforms, MISP and OpenCTI, are introduced. A threat intel report on the adversary targeting Stark Research Labs is presented to kick off the investigation into potential signs of intrusion in the company.\nScaling Response and Analysis (608.2) The course continues from chapter 1 by focusing on response actions. Students learn how to collect evidence at scale to scope a potential intrusion by leveraging EDR tooling data from EDR Solutions like Sysmon. However, they also discuss common bypass techniques that attackers use to evade EDR technology.To aid in this analysis, the Velociraptor tool is introduced as a powerful platform for incident response and threat hunting.\nThe chapter shows how Velociraptor can collect forensic artifacts from across the enterprise and provide deep-dive capabilities into individual hosts of interest. Additionally, Elasticsearch is used to ingest and process data from various tools, allowing for fast searches and aggregations. Students also learn about rapid response options for targeted data collections at scale using tools like Velociraptor and CyLR. Finally, solutions are presented for quickly processing acquired data for analysis in tools like Timesketch and individual artifact review.\nModern Attacks against Windows and Linux DFIR (608.3) The third chapter of the course shifts focus from network-based analysis to traditional host-based forensic artifact analysis. It begins by discussing modern attack techniques on Windows systems, including ransomware and “living-of-the-land” (LOTB) attacks that avoid detection by using built-in binaries and scripts. The use of Sigma rules is highlighted as a way to facilitate rapid detection and response.\nThe section also covers Linux incident response and analysis, starting with common vulnerabilities and exploits targeting Linux systems. It then dives into DFIR fundamentals for analyzing Linux systems, including key concepts such as differences among Linux distributions and file systems, and strategies for handling initial triage and deeper forensic analysis. The chapter concludes by providing best practices for hardening Linux systems and enhancing logging configurations to aid future investigations.\nAnalyzing macOS and Docker Containers (608.4) The course now focuses on Apple macOS incident response, building on the foundation established earlier. This includes understanding the history, ecosystem, and details of the Apple Filesystem (APFS), file structure, and important file types such as Property List (plist) configuration files. A discussion of challenges and opportunities in responding to macOS incidents follows, covering topics like acquiring disk and triage data, reviewing acquisitions, and identifying suspicious activity in logs and artifacts.\nThis part of the course then transitions to containerized microservices and Docker analysis, focusing on the architecture and management of Docker containers and providing a specific triage workflow for quick and effective response against individual containers as well as the container host.\nCloud Attacks and Response (608.5) This part of the course focuses on incident response in major cloud platforms from Microsoft and Amazon, covering log analysis techniques, architecture designs, and automation initiatives that can be applied across various cloud providers. It highlights unique challenges and opportunities in cloud environments, particularly through the use of the MITRE ATT\u0026CK framework’s Cloud Matrix.\nIn-depth discussion follows on Microsoft 365 (M365) and Azure, including popular SaaS offerings like Entra ID, Exchange, SharePoint, and Teams, as well as common attack scenarios against these platforms. The importance of log analysis is emphasized, particularly in identifying suspicious user logon and email activity from Unified Audit Logs.\nThe course then addresses the Recovery phase, covering security enhancements to detect or prevent similar attacks in the future for M365 and Azure.\nNext, it delves into Amazon Web Services (AWS), covering its general architecture and components, as well as numerous logs and services providing critical detection and analysis data for responders. Discussions focus on architecting for response in the cloud, including setting up security accounts for a secure enclave within AWS, using template VMs (AMIs) for analysis, and automating IR tasks with AWS Lambda and Step Functions.\nCapstone: Enterprise-Class IR Challenge The final section of the course is a capstone exercise that allows students to apply their knowledge by working on a simulated breach scenario. They will receive a dataset from a compromised environment that spans multiple host operating systems and cloud environments, and use tools and techniques learned throughout the course to uncover the steps of the breach.\nKey Takeaways Summary of key concepts and skills learned during the course During the SANS FOR608 course, I learned key concepts and skills that enabled me to do effective incident response team management and coordination, including enterprise-level incident detection and to deploy threat hunting strategies. The course covered large-scale event correlation and timeline analysis techniques to identify patterns and trends in incidents, as well as multi-platform artifact analysis for incident response.\nSpecifically, I gained hands-on experience analyzing artifacts from various platforms, including Windows devices, Linux systems, macOS devices, containerized environments, and cloud-based infrastructure. This comprehensive training has equipped me with the knowledge and tools needed to detect, analyze, and respond to complex threats in enterprise environments.\nAnalysis of learning outcomes and their application in real-world scenarios Based on the provided course materials, I have analyzed my learning outcomes and their application in real-world scenarios. Through my analysis, I have gained a deeper understanding of the key concepts and skills required for effective cloud response and analysis, container DFIR fundamentals, detecting modern attacks, enterprise incident response management, enterprise visibility and incident scoping, foundational cloud concepts, Linux DFIR fundamentals, macOS DFIR fundamentals, macOS essentials, rapid response triage at scale.\nI have also gained practical knowledge of how to correlate large volumes of data to identify patterns and trends in incidents.\nIn particular, my experience with cloud-based infrastructure has highlighted the need for a comprehensive understanding of foundational cloud concepts, including popular cloud services that enterprises use to support business operations. I have also gained familiarity with common data source types in an enterprise environment and strategies to aggregate telemetry from disparate resources.\nMy analysis of learning outcomes suggests that effective application of these skills requires a combination of technical expertise, analytical thinking, and communication skills. By mastering these skills, I am confident in my ability to respond effectively to complex incidents and provide value to organizations as a security professional.\nConclusion and Recommendations Summary of overall effectiveness of the SANS Forensics course for608 The SANS FOR608 course is a comprehensive training program that provides students with a strong foundation in incident response, threat hunting, and digital forensic analysis. Through its curriculum, the course covers key concepts and skills related to managing incident response teams, detecting threats in enterprise environments using advanced analytics tools, correlating large volumes of data to identify patterns and trends in incidents, analyzing artifacts from various platforms including Windows devices, Linux systems, macOS devices, containerized environments, and cloud-based infrastructure.\nAnalysis:\nComprehensive coverage: The course covers a wide range of topics related to incident response and digital forensic analysis, providing students with a comprehensive understanding of the subject matter. Hands-on experience: The course includes hands-on exercises that allow students to apply their knowledge in real-world scenarios, which helps to reinforce learning and improve retention. Practical skills: The course emphasizes practical skills over theoretical concepts, which is beneficial for security professionals who need to respond to incidents in a timely and effective manner. Real-world relevance: The course covers topics that are relevant to real-world scenarios, making it easier for students to apply their knowledge in practical settings. Summary:\nFrom my opinion the SANS FOR608 course is highly effective in providing students with a comprehensive understanding of incident response and digital forensic analysis. Through its comprehensive coverage, hands-on exercises, and emphasis on practical skills, the course provides security professionals with the knowledge and skills needed to respond effectively to incidents. Overall, the course is well-structured, engaging, and relevant to real-world scenarios, making it an excellent choice for individuals looking to improve their incident response and digital forensic analysis skills.\nRecommendations for future students looking to learn forensic analysis skills Gain Practical Experience Before enrolling in a forensic analysis course, try to gain as much practical experience as possible for example practicing Sherlocks on hack the box or try yourself in Malware analysis challanges This could also involve setting up your own home lab, participating in bug bounty programs, or volunteering to help a friend or family member with their computer issues. The more hands-on experience you have, the better equipped you’ll be to learn and apply forensic analysis skills.\nDevelop Your Analytical Skills Forensic analysis requires strong analytical skills, including attention to detail, critical thinking, and problem-solving. Practice these skills by working on puzzles, brain teasers, or other activities that challenge your mind. You can also try analyzing data sets, network traffic logs, or system logs to develop your skills.\nLearn about Cloud Computing As a forensic analyst, it’s essential to understand cloud computing and how it affects the analysis of digital evidence. Take online courses or attend webinars that teach you about cloud security, compliance, and investigation techniques. This will help you stay up-to-date with the latest trends and technologies.\nFamiliarize Yourself with Linux and macOS Linux and macOS are popular operating systems used by many organizations, including those in the finance, healthcare, and government sectors. Take online courses or attend workshops that teach you about these operating systems, including their command-line interfaces, file systems, and security features.\nJoin Online Communities Joining online communities, such as Reddit’s r/learnprogramming or r/netsec, can be a great way to connect with other professionals in the field, ask questions, and learn from their experiences. You can also participate in online forums, attend webinars, or join online study groups to stay updated on the latest forensic analysis techniques.\nConsider Specializing in a Specific Area Forensic analysis is a broad field that encompasses many areas, including computer forensics, mobile device forensics, and digital evidence collection. Consider specializing in a specific area that interests you the most, such as incident response or threat hunting. This will help you develop deeper knowledge and skills in that area.\nStay Up-to-Date with Industry Developments The field of forensic analysis is constantly evolving, with new technologies and techniques emerging regularly. Stay up-to-date with industry developments by attending conferences, webinars, or online courses that focus on the latest trends and advancements.\nhttps://www.sans.org/cyber-security-courses/enterprise-incident-response-threat-hunting/ ↩︎",
    "description": "Enterprise Threat hunting and Response (FOR608) Introduction Brief overview of forensic analysis and its application Course Overview Proactive Detection and Response (608.1) Scaling Response and Analysis (608.2) Modern Attacks against Windows and Linux DFIR (608.3) Analyzing macOS and Docker Containers (608.4) Cloud Attacks and Response (608.5) Capstone: Enterprise-Class IR Challenge Key Takeaways Summary of key concepts and skills learned during the course Analysis of learning outcomes and their application in real-world scenarios Conclusion and Recommendations Summary of overall effectiveness of the SANS Forensics course for608 Recommendations for future students looking to learn forensic analysis skills Enterprise Threat hunting and Response (FOR608) Course description from SANS 1 :",
    "tags": [
      "Forensicwheels",
      "Honeypot",
      "Canarytokens"
    ],
    "title": "SANS FOR608",
    "uri": "/posts/sans_for608/index.html"
  },
  {
    "breadcrumb": "Forensic wheels \u003e  Forensic wheels",
    "content": "I. Introduction Brief overview of the use case: ingesting web data into Elasticsearch with HoneyPot HTTPD II. Setting up HoneyPot HTTPD for Web Data Ingestion Containerizing the application to run inside docker III.Ingesting Web Data into Elasticsearch with HoneyPot HTTPD Explanation of how to use the honeyhttpd command-line tool to ingest web data into Elasticsearch Example of how to configure the honeyhttpd output to match your desired Elasticsearch index structure IV. Benefits and Use Cases Discussion of the benefits of using HoneyPot HTTPD for ingesting web data into Elasticsearch (e.g., improved threat detection, enhanced visibility) Real-world examples of use cases where this setup can be particularly effective (e.g., logging web traffic, monitoring online activity) V. Conclusion Recap of key points about using HoneyPot HTTPD to ingest web data into Elasticsearch*** Final thoughts on the value of this setup for your organization’s threat hunting or security operations. I. Introduction Brief overview of the use case: ingesting web data into Elasticsearch with HoneyPot HTTPD I recently set out to ingest web traffic data into our SIEM solution, which requires data to be ingested in a specific format. After researching various options, I sought an easy-to-use solution that could integrate with our existing Elasticsearch setup. One tool that caught my attention was HoneyPot HTTPD.\n\u003c!–more–\u003e\nAs I researched potential solutions, I realized that many of them required manual configuration and scripting to ingest web data into Elasticsearch. However, HoneyPot HTTPD offered a simple and elegant way to do so through its built-in ingestion feature. This was especially appealing since I wanted to integrate the web traffic data with our existing SIEM setup that utilized Elasticsearch.\n\u003c!–more–\u003e\nIn particular, I needed a tool that could collect web traffic data and forward it to a centralized location for analysis and processing. HoneyPot HTTPD’s ability to ingest web data into Elasticsearch made it an attractive choice, as it would allow me to leverage our existing Elasticsearch infrastructure and integrate the data with our SIEM solution seamlessly.\n\u003c!–more–\u003e\nWith this in mind, I set out to explore how to use HoneyPot HTTPD to ingest web traffic data into Elasticsearch. In the following sections, I’ll walk you through the steps I took to configure HoneyPot HTTPD for ingestion, including the Dockerfile used to build the container and any additional configuration settings required.\nII. Setting up HoneyPot HTTPD for Web Data Ingestion Containerizing the application to run inside docker \u003c!–list-separator–\u003e\nCreating a Dockerfile\nI started by creating a Dockerfile that would build the HoneHTTPD image. The Dockerfile included the following instructions:\nFROM ubuntu:latest # Install necessary dependencies RUN apt-get update \u0026\u0026 apt-get install -y python3-pip # Install required packages RUN pip3 install honeyhttpd # Set working directory to /usr/local/bin WORKDIR /usr/local/bin # Expose port 80 for HTTP traffic EXPOSE 80 # Copy configuration file COPY config.yaml /etc/honeyhttpd/ # Run HoneyPot HTTPD CMD [\"honeyhttpd\", \"-c\", \"/etc/honeyhttpd/config.yaml\"] In this Dockerfile, I:\nUsed the official Ubuntu image as the base image Installed necessary dependencies, including Python and pip Installed the required packages, including HoneyPot HTTPD Set the working directory to /usr/local/bin to run the application from Exposed port 80 for HTTP traffic Copied the configuration file (config.yaml) into the container Specified the command to run HoneyPot HTTPD with the -c option, which points to the configuration file \u003c!–list-separator–\u003e\nBuilding and Running the Container\nOnce I had created the Dockerfile, I built the image by running the following command:\ndocker build -t honeyhttpd . This command told Docker to create an image with the tag honeyhttpd using the instructions in the Dockerfile.To run the container, I used the following command:\ndocker run -p 80:80 honeyhttpd This command started a new container from the honeyhttpd image and mapped port 80 on the host machine to port 80 in the container.\n\u003c!–list-separator–\u003e\nConfiguring the Container\nTo configure the container, I updated the config.yaml file to point to my Elasticsearch instance. Here’s an example of what the configuration file might look like:\n-ingest: es_host: \"localhost:9200\" es_index: \"logstash-2019.04\" es_type: \"log\" This configuration told HoneyPot HTTPD to forward web traffic data to my Elasticsearch instance, where it could be processed and stored.\nWith the container running and configured, I was now ready to test HoneyPot HTTPD’s ability to ingest web traffic data into Elasticsearch.\nIII. Ingesting Web Data into Elasticsearch with HoneyPot HTTPD Explanation of how to use the honeyhttpd command-line tool to ingest web data into Elasticsearch Example of how to configure the honeyhttpd output to match your desired Elasticsearch index structure IV. Benefits and Use Cases Discussion of the benefits of using HoneyPot HTTPD for ingesting web data into Elasticsearch (e.g., improved threat detection, enhanced visibility) Real-world examples of use cases where this setup can be particularly effective (e.g., logging web traffic, monitoring online activity) V. Conclusion Recap of key points about using HoneyPot HTTPD to ingest web data into Elasticsearch*** Final thoughts on the value of this setup for your organization’s threat hunting or security operations.",
    "description": "I. Introduction Brief overview of the use case: ingesting web data into Elasticsearch with HoneyPot HTTPD II. Setting up HoneyPot HTTPD for Web Data Ingestion Containerizing the application to run inside docker III.Ingesting Web Data into Elasticsearch with HoneyPot HTTPD Explanation of how to use the honeyhttpd command-line tool to ingest web data into Elasticsearch Example of how to configure the honeyhttpd output to match your desired Elasticsearch index structure IV. Benefits and Use Cases Discussion of the benefits of using HoneyPot HTTPD for ingesting web data into Elasticsearch (e.g., improved threat detection, enhanced visibility) Real-world examples of use cases where this setup can be particularly effective (e.g., logging web traffic, monitoring online activity) V. Conclusion Recap of key points about using HoneyPot HTTPD to ingest web data into Elasticsearch*** Final thoughts on the value of this setup for your organization’s threat hunting or security operations. I. Introduction Brief overview of the use case: ingesting web data into Elasticsearch with HoneyPot HTTPD I recently set out to ingest web traffic data into our SIEM solution, which requires data to be ingested in a specific format. After researching various options, I sought an easy-to-use solution that could integrate with our existing Elasticsearch setup. One tool that caught my attention was HoneyPot HTTPD.",
    "tags": [
      "Forensicwheels"
    ],
    "title": "HoneyHTTPD",
    "uri": "/posts/honeyhttpd/index.html"
  },
  {
    "breadcrumb": "Forensic wheels",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Categories",
    "uri": "/categories/index.html"
  },
  {
    "breadcrumb": "Forensic wheels \u003e  Tags",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Tag - Forensicwheels",
    "uri": "/tags/forensicwheels/index.html"
  },
  {
    "breadcrumb": "Forensic wheels \u003e  Tags",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Tag - Openbsd",
    "uri": "/tags/openbsd/index.html"
  },
  {
    "breadcrumb": "Forensic wheels \u003e  Categories",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Category - Personal",
    "uri": "/categories/personal/index.html"
  },
  {
    "breadcrumb": "Forensic wheels",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Tags",
    "uri": "/tags/index.html"
  },
  {
    "breadcrumb": "Forensic wheels \u003e  Tags",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Tag - Zen",
    "uri": "/tags/zen/index.html"
  },
  {
    "breadcrumb": "Forensic wheels \u003e  Categories",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Category - Zen",
    "uri": "/categories/zen/index.html"
  },
  {
    "breadcrumb": "",
    "content": "You are not your thoughts, they are just the finger pointing at the moon\nPosts My review of the Sans Enterprise Forensics and Threadhunting Course - SANS FOR608\nDirk – 2025-05-29 Thu Some thoughts and Idears about what OpenBSD and Zen have in Common - OpenBSD and Zen\nDirk – 2025-05-26 Mo This is my intro post for my blog About\nDirk – 2025-05-26 Mo",
    "description": "You are not your thoughts, they are just the finger pointing at the moon\nPosts My review of the Sans Enterprise Forensics and Threadhunting Course - SANS FOR608\nDirk – 2025-05-29 Thu Some thoughts and Idears about what OpenBSD and Zen have in Common - OpenBSD and Zen\nDirk – 2025-05-26 Mo This is my intro post for my blog About\nDirk – 2025-05-26 Mo",
    "tags": [],
    "title": "Forensic wheels",
    "uri": "/index.html"
  },
  {
    "breadcrumb": "Forensic wheels",
    "content": "You are not your thoughts, they are just the finger pointing at the moon\nPosts My review of the Sans Enterprise Forensics and Threadhunting Course - SANS FOR608\nDirk – 2025-05-29 Thu Some thoughts and Idears about what OpenBSD and Zen have in Common - OpenBSD and Zen\nDirk – 2025-05-26 Mo This is my intro post for my blog About\nDirk – 2025-05-26 Mo",
    "description": "You are not your thoughts, they are just the finger pointing at the moon\nPosts My review of the Sans Enterprise Forensics and Threadhunting Course - SANS FOR608\nDirk – 2025-05-29 Thu Some thoughts and Idears about what OpenBSD and Zen have in Common - OpenBSD and Zen\nDirk – 2025-05-26 Mo This is my intro post for my blog About\nDirk – 2025-05-26 Mo",
    "tags": [],
    "title": "Forensic wheels",
    "uri": "/posts/index.html"
  },
  {
    "breadcrumb": "Forensic wheels \u003e  Tags",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Tag - Canarytokens",
    "uri": "/tags/canarytokens/index.html"
  },
  {
    "breadcrumb": "Forensic wheels \u003e  Categories",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Category - Forensic",
    "uri": "/categories/forensic/index.html"
  },
  {
    "breadcrumb": "Forensic wheels \u003e  Tags",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Tag - Honeypot",
    "uri": "/tags/honeypot/index.html"
  },
  {
    "breadcrumb": "Forensic wheels \u003e  Categories",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Category - Threathunting",
    "uri": "/categories/threathunting/index.html"
  },
  {
    "breadcrumb": "Forensic wheels \u003e  Categories",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Category - DFIR",
    "uri": "/categories/dfir/index.html"
  },
  {
    "breadcrumb": "Forensic wheels \u003e  Categories",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Category - Honeypot",
    "uri": "/categories/honeypot/index.html"
  }
]
