<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Threathunting :: Category :: Forensic Wheels</title>
    <link>http://localhost:1313/categories/threathunting/index.html</link>
    <description></description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>All text is licensed under a Creative Commons Attribution 4.0 International License.</copyright>
    <lastBuildDate>Mon, 16 Jun 2025 07:22:00 +0200</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/threathunting/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Honeyhttpd for threathunting</title>
      <link>http://localhost:1313/honeyhttpd/index.html</link>
      <pubDate>Mon, 16 Jun 2025 07:22:00 +0200</pubDate>
      <guid>http://localhost:1313/honeyhttpd/index.html</guid>
      <description>I. Introduction Brief overview of the use case: ingesting web data into Elasticsearch with HoneyPot HTTPD I recently set out to ingest web traffic data into our SIEM solution, which requires data to be ingested in a specific format. After researching various options, I sought an easy-to-use solution that could integrate with our existing Elasticsearch setup. One tool that caught my attention was HoneyPot HTTPD.</description>
    </item>
  </channel>
</rss>